Все сервисы Хабра Сообщество IT-специалистов Ответы на любые вопросы об IT Профессиональное развитие в IT Удаленная работа для IT-специалистов Как стать автором Хабровчане vs. цифровые сервисы банков: итоги Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп Войти Регистрация bipiem вчера в 18:50 Хорошие BPM — инструменты, которых нет и нет. Моделирование процессов Анализ и проектирование систем, Визуализация данных, Visual Basic for Applications, Подготовка технической документации Поговорим о том, какие инструменты хотелось бы иметь при описании бизнес-процессов. Инструментов BPMS (BPM systems) много, но выбрать то особо нечего … Ниже перечислим некоторые важные инструментальные возможности некоторых сред моделирования процессов (в основном АРИС-ARIS и MS visio). Уточнения. BPM (business process management, управление бизнес-процессами) - это тот, который из области системной инженерии (SE), который почему-то теперь называют BPA (анализ). Он же CASE, где S= "system" (не "software"). "Бизнес-процесс" - это синоним "процесс" и даже таким терминам как: операция, действие, активность, функция, процедура. Приставку "бизнес" указывают, чтобы отличать процессы класса "административные" - "деловые" (см. BPM CBOK) от химических и физических (других "природных") процессов. Любой процесс, который реализуется человеком или компьютером (программой, роботом), - это "бизнес-процесс", несмотря на то, что непосредственно к "бизнесу" отношения может и не иметь. Настолько вот запутан этот BPM, хотя в реальности он прост. Задача Она очень простая. Нужно простым образом формализовывать процессы, нас окружающие. Так формализовать, чтобы модели процессов были адекватны реальным процессам, но чтобы их визуализацию хоть как-то понимало большинство людей, первый раз слышащих слово "BPM". Формально "интуитивно понятных" BPM-нотаций - много (также как много рекламно-маркетингового шума о BPM), но взять особо нечего. Однако здесь важна не только сама нотация (IDEF\VAD\EPC\BPMN\UML и т.п.), а механизмы ее представления на экране: слои, вариативность "точек зрения" (view-шек, представлений) и т.п. На мой взгляд, лучшим вариантом пока остается EPC (Event-driven Process Chain), но не суть, - представленные ниже подходы могут применяться к другим нотациям. Можно зарисовывать простые процессы в произвольной нотации карандашом и на салфетке - и это тоже будет работать, но нам хотелось бы "цифровизованно" (через автоматизацию процесса моделирования процессов), включая проверку соблюдения нотации (соглашения о моделировании), кликабельность модели (объектов схемы), ведение репозитария объектов, web-паблишер и много всего остального, что облегчает работу с большими и сложными моделями. 1. Подходы к визуализации диаграммы 1.1 Слои модели Они позволяют управлять сложностью внутри одной модели (схемы). Например, введем три категории: Документы (входящие и исходящие), функция, ресурсы (роли и инструменты). Для каждой категории - свой слой. Нарисовал нам наш архитектор (специалист по моделированию процессов) схему: Рис. 1 Процесс оформления заявления Visio Stencil Library for EPC - не нашел, поэтому "как то так" (штатная EPC - вообще "никакая"). Смотрят пользователи (Работник, Начальник, бизнес и системные аналитики) на схему и понять не могут, что нарисовано то и как этот процесс работает. Соглашение о моделировании прочитали, обучающие ролики посмотрели, но все равно не понятно. Путь к пониманию - это упрощение схемы, например, будем отключать слои. В правильном инструменте (BPM-Tool) должны быть кнопки управления слоями - категориями. По кнопке "отключить ресурсы" - будет скрыт слой "ресурсы", в котором показаны объекты схемы (модели) типа "Роль" {Работник; Начальник} и Инструмент {MS Word}. Уже схема стала менее нагруженной (правой части не стало). Далее отключаем слой "Документооборот" (docflow) и остается только последовательность действий (workflow, Process Flow), который говорит, что нужно провести всего две операции. По мере появления ясности подключаем слои (кто исполнитель и какие документы на входе и выходе каждой функции \ операции). Когда схема большая (перегруженная) отключение слоев может творить "чудеса" в плане облегчения восприятия процесса. Иногда достаточно увидеть несколько представлений "одного и того же" (т.е. "те же самые, только в профиль") чтобы понять и нотацию и саму логику схемы, а если для этого достаточно нажать несколько кнопок (фильтров категорий), то путь к пониманию резко сокращается. Пользоваться послойным построением схемы также удобно: вначале нарисовали основной слой workflow, потом наращиваем информативность процесса другими слоями. Пример такой реализации возможен в MS Visio: Рис. 2 Управление слоями в MS Visio Инструмент управления слоями, как управление сложностью - давно норма в векторных графических редакторах, ГИС и других CAD-системах, например, AutoCAD. 1.2 Плавательные дорожки Swimlane позволяют группировать процесс по разрезам "Исполнители" и "Инструменты" (в общем случае - в разрезе любой иной категории объектов). Применительно к Рис. 1 "Процесс оформления заявления": отключили слой "документы", а оставшуюся часть (функции и ресурсы) представили в виде одной или двух Swimlane (опять же "по кнопке"). Рис. 3 Swimlane по ролям в горизонтальной плоскости Применительно к рассматриваемому случаю возможны следующие комбинации Swimlane: две одинарные (горизонт, вертикаль) по ролям; две одинарные (горизонт, вертикаль) по инструментам (часто в разрезе баз данных показывают); две двойные, "шахматка", таблица (горизонт - роли, вертикаль - инструменты и наоборот). "Дорожки" помимо того, что позволяют создать другое (альтернативное) представление процесса (смена представления иногда играет решающую роль в понимании процесса), обеспечивают сортировку по указанным категориям, что позволяет быстро и просто найти: где применяется такой-то инструмент и где "нужно поработать" такому то исполнителю (роли). Основная проблема "дорожек" в том, что когда "дорожки" не нагруженные, то "съедается" основная часть листа и плотность "упаковки" объектов в модели процесса становится мизерная (КПД бассейна, где загружены только две дорожки, а остальные пустые - низкое). 1.3 Объекты модели и их атрибуты, свойства Модель процесса в виде диаграммы отличается от "просто нарисованной схемы процесса" тем, что в ней "выделены" объекты и присутствуют атрибуты этих объектов. Для каждой категории объектов можно задавать свой набор атрибутов. Манипуляция с атрибутами объектов позволяет сортировку, "атрибутивную" аналитику и т.п. В целом, добавление атрибутов, как задающих графический элемент и его размещение, так и связность с окружением и "бизнес-свойства" объекта - это и есть ключевой механизм моделирования и не только процессов. Как минимум необходимы атрибуты: название объекта, тип (функция, документ, роль и т.п.), связь с другими объектами. В принципе любой векторный графический редактор оперирует с объектами, но редкий имеет удобные инструменты работы с их атрибутами. В Visio это могут быть данные фигуры и таблица свойств фигуры (ShapeSheet). Еще интереснее свойства хранить в отдельном файле Excel , например, связанном с visio (штатная функция visio). Такой подход позволяет иметь репозитарий свойств объектов в файле Excel и соответственно обширные инструменты поиска, сортировки и т.п. Любой BPM инструмент, включая АРИС, не имеет таких развитых возможностей для анализа как Excel , поэтому выгрузка в Excel интересуемой пользователя атрибутики была бы важным элементом любого BPM-инструмента. При просмотре схемы процесса должна быть возможность выделения объекта и просмотр атрибутов схемы и ее объектов (с наложением фильтров, т.к. иначе будет избыток). 1.4 Задание своей нотации (на примере новой ЕРС ver. 2) Посмотрим на примере нотации ЕРС. Что же в ней улучшить? Все улучшения запишем в гипотетическую ЕРС2 нотацию. Есть предубеждение, что Событийная цепочка процессов обязательно должна иметь строгое чередование "функция" - "событие". Это не так: события указываются только тогда, когда это действительно нужно. Вообще, от workflow (схема алгоритма) ЕРС отличается в основном двумя параметрами: наличие указания ресурсов и документов (материалов) и иное задание условия разветвления алгоритма (ветвление по условию). Использование элемента "событие" - как указание результата, вместо "да" и "нет" - более функциональное и позволяет кроме того сократить номенклатуру графических примитивов. Событие - как "что-то произошло" и событие - как результат проверки условия. Как показано в п. 1.1 "Слои модели": выделяем зону docflow, EPC-workflow и ресурсную зону. Docflow, а также любые другие входы и выходы функции (включая материалы, заготовки, полуфабрикаты и конечные продукты) - отображаем слева от функции (отдельная стрелка для всех входов, отдельная для всех выходов) с соответствующим направлением движения, а все ресурсы - справа от функции (без направленных коннекторов). Это позволит иметь стандартный "взгляд" на процесс и сразу фокусироваться на конкретной зоне. В ЕРС2 будет классификация моделей: приведенная и мультиресурсная. В приведенной схеме будет к каждой функции привязано не более одной роли (инструмента), чтобы была однозначность по исполнителю (инструментарию), что важно не только для анализа, но и при построении Swimlane (каждому "пловцу - исполнителю" по выделенной дорожке). Возможность задания своей нотации в инструменте моделирования означает подсказку (блокировку) при некорректном построении модели, как в момент отрисовки, так и через проверочный отчет построенной диаграммы. Например, в ЕРС2 предусматриваются следующие типы коннекторов: для входящих сущностей (входящие документы, материалы-заготовки), для выходящих (исходящие документы, продукты операции), соединитель потока (функции, события), соединитель ресурса. В объекте "функция" предусматриваются три "Connection Point" (visio): вверху и внизу объекта "функция" (и "события") - для указания структуры потока (очередность действий, событий); слева в овале "функция" два коннектора: один вход, второй выход (общие для docflow и потока материалов и т.п.); справа два коннектора: для исполнителя функции и инструмента, который используется для реализации функции. Такой подход позволит легче читать схему ЕРС, сегодня же "глаза разбегаются", когда видишь паутину и вперемешку разбросанные а) "роли" - и слева и справа функции и б) "документы" - и слева и справа функции. Соответственно тест на валидность построенной модели проверяет соблюдение указанных правил соединения объектов, а также другие правила построения (про коннекторы - лишь как небольшой пример проверки правил нотации). Вопрос: кроме как в visio, где можно задавать новые нотации и делать проверки на соответствие (валидность), аналогичные показанным выше? 1.5 Из таблицы - схему, а из схемы - таблицу Если посмотреть на ЕРС схему (рис. 1), то видно, что она однозначно задается таблицей. Поля таблицы: вход, выход, функция, исполнитель, инструмент. Заполнили табличку, нажали кнопку "построить" - и схема сгенерировалась. Справедливо и обратное: по нарисованной схеме можно построить адекватную табличку без потери информации (lossless). Механизм "Из таблицы - схему" в ARIS \ ARIS Express называется Smart Designer. Только он не умеет строить ветвление процесса. На всякий случай: поиск по "ARIS Smart Designer EPC", закладка "картинки". Преимущества: человек, вообще не знающий нотации (ни одной), по простым правилам заполнил табличку и сгенерировал "по кнопке" схему процесса. Более того, возможно итерационно: вначале заполнил поле "функция" (оно же и "событие", - только с указанием соответствующего признака) - увидел "ствол" функций и событий (магистраль потока, workflow), а потом начал наращивать их левые (вход\выход) и правые (ресурсные) связи. Можно предусмотреть в таблице отдельное поле "полное описание функции" с подробным (большим, т.е. не влезающим в надпись) описанием операции, отображаемое на диаграмме в виде, например, всплывающей подсказки (или в отдельном окне) при активации конкретной функции (при наведении мышью). Концептуально изложенный подход близок к выделенной в АРИС нотации "табличная ЕРС" (см. "Нотация ЕРС в виде таблицы"), но здесь реализация в виде обычной текстовой таблицы, т.е. ближе к ARIS Smart Designer. Причем логику процесса также можно указать в составе таблицы, например, как ссылка на предшествующий объект (этого нет Smart Designer, но не сложно добавить "что-то" для ЕРС2). Таблицу можно вставлять в текстовые регламенты word и макросом (VBA) генерить схему процесса ("не отходя от кассы") с дублированием конечно в общем каталоге моделей. В теме автоматического создания диаграмм из таблицы (особенно Excel) нельзя обойти MS Visio Data Visualizer. Как обычно, - идея "на отлично" (идея далеко не новая), но реализация … Видимо в погоне за максимальным универсализмом "выплеснулся ребенок BPM". Я ожидал увидеть что-то такое же простое, функциональное (мощное) и BPM-ориентированное как ARIS Smart Designer. Может это впечатление сложилось из-за отсутствия мастера автопостроения EPC. Кроме того, исключительная модель по подписке не позволяет популяризацию инструмента. Собирать схему из таблицы намного сложнее, чем наоборот, т.к. требуется сложный механизм пространственного разнесения объектов схемы (минимизация пересечений, задание направления потока и т.п.). 1.6 Из скрипта - схему, а из схемы - скрипт Подход аналогичный генерации схемы по таблице (см. п. 1.5.), только используется язык, наподобие plant uml \ dot (graphviz). Структурные схемы (другие с простой нотацией) и UML строить уже можно, но вот EPC (лучше EPC2, т.е. задание языком специфических правил нотации) и другие со сложной нотацией - нет (красиво не получилось). Применительно к graphviz: в случае, когда репозитарий объектов хранится в Excel, можно автоматически генерировать схемы, используя инструменты типа: Excel to Graphviz (sourceforge.net). Пример простого VAD из dot: digraph g {

rankdir=LR;

node [shape = cds];

Step1 -> Step2 -> Step3 -> Step4;

} Посмотреть схему можно, вставив код в окно "Online Graphviz Generator": http://fiane.mooo.com:8080/graphviz/ Кстати, редкий Online Graphviz понимает несокращенный набор параметров спецификации. Кратко: LR - говорит, что схема строится "слева - направо" (для EPC ставим "сверху - вниз"), cds - это код объекта в виде "кораблика" (VAD). Далее через "->" указывает последовательность процессов. Можно задавать последовательно-параллельные структуры, подписи и тип стрелок, добавлять объекты "исполнители", "продукты" и другие "VAD-примочки", но при этом код становится сложным, а отсутствие нормального управления надписью (перенос, вписывание в фиксированный размер объекта и т.п.) ограничивают применимость инструмента. Применять подход "скрипт -> схема" можно в сочетании с табличным представлением: например, скриптом VBA читаем поля заполненной пользователем таблички бизнес-процесса (см. 1.5 Из таблицы - схему …) и генерируем dot-последовательность, которую "скармливаем" локальному генератору dot (Graphviz устанавливается на компьютер) или Online Generator. Прямо в word- документе под табличкой "Процесс такой-то" размещаем "кнопочку" и пользователю даем возможность просмотра в графике того, что он ввел в табличку (как он описал в табличной форме свой процесс). Из "BPM-связанного" особенно удобен dot для построения графов переходов. Если в модели есть docflow с документами со многими состояниями, то без схемы переходов состояний понимание многочисленных переходов осложнено, особенно когда смена состояний документа размазана по многим листам схемы. В итоге заполнив табличку и "скормив" её генератору dot мы увидим всевозможные переходы из состояний. Например, для документа "Отчет" возможны следующие состояния: Шаблон отчета - Шаблон отчета заполнен - Отчет согласован в отделе №1 - Отчет согласован в отделе №2 - Отчет подписан первой подписью - Отчет подписан второй подписью - Отчет оправлен регулятору - Отчет принят регулятором (возможны различные переходы из состояний). В теме автоматического создания диаграмм из "текстового описания языком" нельзя не упомянуть про Object Process Diagram (OPD) \ Object Process Language (OPL). Тезисы у Object Process Methodology (OPM) вроде как BPM-ориентированные, но поверхностное знакомство с ним породило уверенность, что эта методология намного дальше от "workflow \ business process" (народа), чем те же plant uml \ dot (graphviz). OPCloud доступен тут: https://sandbox.opm.technion.ac.il/ Если немного помечтать, то настоящий BPM - инструмент должен из любого текстового "процессного" регламента (порядка действий) строить схему процесса. Когда это появится, то загрузив в такую систему многостраничные регламенты (листов под 200-300) мы обязательно увидим противоречивость и неоднозначность этих "пухлых" регламентов (несмотря на это, по ним как-то все работают же). 2. Другое 2.1 Навигация по связанным моделям (каталог моделей) При построении вложенных диаграмм (причем, возможно выполненных в разных нотациях, например, верхнеуровневые в VAD, IDEF0) необходимо иметь возможность перехода от одной к другой. Обычно связанный набор моделей (и их объектов) называют репозитарий (репозитОрий). Часто в интерфейсе программы предусмотрено два окна: иерархическое дерево моделей (слева вверху) и окно диаграммы (основное). В идеале навигация по моделям должна быть трех видов: по дереву моделей (treeview ); по кликабельным объектам схемы (детализация - проваливаемся в низ, кнопка "выше" - переход к верхнеуровневой модели); комбинированная, когда при переходе через кликабельные объекты схемы меняется фокус на общем дереве процессов. В итоге получаем визуальный навигатор по одной "большой процессной модели", где верхнеуровневые схемы описывают "лес процессов", а детальные модели (процессы) - "деревья". При этом можно легко менять декомпозицию и перемещаться по уровням представления "процессного слоя" компании. 2.2 Разные фишки и отчеты по атрибутике Поиск по названиям моделей, атрибутам. Задание правил отбора, например, по диапазону значений последнего редактирования модели. Выгрузка данных фильтрации \ сортировки во внешний файл (отчет), причем разного формата (например, excel для анализа, pdf для презентабельности) и т.п. Правила работы с одноименными объектами (разрешение конфликтов), например, при наименовании нового объекта система смотрит - использовался ли одноименный объект и при выявлении такового предложит варианты, например, подтвердить или переименовать. У объекта в терминах АРИС только один Definition (Определение объекта, образ), но сколько угодно Occurrence (Отображение объекта, экземпляры на схемах). 2.3 Специфические отчеты Отчеты могут быть разнообразны (зависит от воображения), но в первую очередь, нас будут интересовать выгрузки в распространенные формы. Универсальный генератор отчетов "на все случаи жизни" видимо проблема, но инструменты создания отчетов должны быть изначально в среде моделирования. Для примера рассмотрим матрицу ответственности\ участия RACI. Требуется автоматическая генерация усеченной RACI-матрицы (здесь показано только для участников процесса, но часто плюс владельцы процесса) по имеющейся, например, VAD-диаграмме (value added chain diagram). Набор ключевых "мега процессов" компании показан в виде VAD и нужно по ним построить (синхронизировать) матрицу участников (RACI по одной только роли "участник процесса"). Рис. 4 Построение RACI матрицы Алгоритм построения таблицы на VBA Visio\Excel может быть следующий: Создаем в таблице Excel новую строку и в поле "Ключевые процессы" подставляем значение с активного листа visio из объекта типа "название мега процесса". Далее циклом пробегаем по всем VAD-элементам схемы (листа) и через связь (объект "соединитель" для связки с объектами "исполнитель") находим связанные объекты типа "исполнитель" (участник подпроцесса). Находим соответствующее название подразделения в шапке таблицы и на пересечении с процессом ставим символ участия (признак). Переход к следующему листу visio. Когда в организации десятки подразделений и около сотни "мега процессов" (их выделение достаточно субъективно), то задача синхронизации схем мега-процессов и матрицы участия подразделений в таких ключевых процессах становится достаточно трудоемкой. 2.4 Упаковка необъятной схемы процесса в печатный лист Когда рисуют гигантскую "портянку" из "тучи элементов" на одной схеме, а потом нужно ее распечатать (А4, А3) или представить в ином интерфейсе (без скролинга такой "портянки"), то возникает ступор. Должна быть поддержка многостраничной схемы и элементов перехода между страницами (в том числе, кликабельными). 2.5 Разное Публикация процессов, совместная работа, интеграция с корпоративной базой нормативных документов и т.п. Авто-размещение объектов на схеме: набросал невпопад объекты на лист (главное правильно связи указать и никого не забыть) и нажал кнопку: "расположить как надо" и система сама оптимально и красиво разместила объекты на схеме (в visio функции выравнивания и распределения фигур). Открытые стандарты хранения и экспорта \ импорта (внешний графический импорт \ экспорт как минимум в visio), как самих графических объектов модели, так и их атрибутов. К сожалению, тот же MS visio так и не научился нормально экспортировать схемы в pdf и svg (например, всплывающие подсказки). Изменение дизайна графического примитива для любого объекта нотации, расширение нотации, передача новых шаблонов в другую аналогичную систему, добавление новых атрибутов объектов (новых полей) и многое другое. Заключение Устаревшие подходы, реализованные в "современных" платных инструментах моделирования не адекватны времени. За механизацией пришли модные: "информатизация", потом "автоматизация", а теперь и "цифровизация" (аж Digital Transformation / digital disruption и совсем "свежий" Digital process Automation), но возможности инструментов моделирования процессов за три десятка лет почти не изменились. Функциональность древних ARIS, BPwin и т.п. практически не осовременилась в современных BPMS, несмотря на то, что интерес к классическому моделированию процессов постоянно растет, т.к. проблема замены текстовых регламентов на что-то прогрессивное - в целом так и не решена (диаграммы рабочих процессов не заменили текст). Имитационное моделирование и исполняемые модели (также направления, process mining, enterprise architecture - ЕА и др.) - не в счет, рассматриваем "классическое моделирование процессов" - оно же просто "формализация процессов". Дождаться Open Source системы, в которой было бы реализовано указанное выше, - в обозримом будущем - маловероятно, поэтому, направление улучшайзинга для себя вижу как связку: visio VBA (core, графика) + Excel (как репозитарий для хранения атрибутов моделей, а в будущем и атрибутов графических объектов, инструменты аналитики) + web (publisher & collaboration). Динозавр - монстр АРИС до сих пор остаётся продуктом №1 в данном сегменте, несмотря на то, что он "заморозился" во времени (в части toolset) и ничего нового в этом направлении не предлагает. АРИС (1994г) и многочисленные visio-надстроенные инструменты (Business Studio, BPM-Х, Orbus iServer и десяток аналогичных) хорошо показали саму концепцию моделирования процессов, которая неизменна десятилетиями. Концептуально подходы понятны, но вот для построения моделей процессов из free взять нечего: через BPMN описать сложные процессы компании - это утопия, если нужно чтобы пользователь понимал нарисованное. Вроде бы удобный трамплин для амбициозного стартапа … Если в CASE, где S="software", еще наблюдается вялотекущая "движуха", например, UML-UML2- SysML или "всяко исполняемое" (no code\ low code), то направление CASE, где S="system" в части BPM (не EA), - фактически "замерло на месте", а робкие попытки, что методологического плана, что инструментального - прежде всего Open Source инструменты "классического" моделирования процессов - скорее отождествляются термином "застой". Правда может я чего-то не заметил. Немного поутихнет мода на BPMN2 (фетиш в плане замещения нотации ЕРС) и мы вернёмся к "вечному", к классическим подходам BPM, т.к. другого ничего пока так и нет (задачу описания небольших процессов - не рассматриваем). Вернувшись к исходной точке описания процессов, следует смотреть в сторону чего-то интуитивно понятного "простому смертному": бухгалтеру, кассиру, секретарю и т.п., т.е. не программисту. Скорее всего, вернемся к "старине" ЕРС (т.е. фактически к "разбитому корыту") и начнем двигаться к нотации "ЕРС+" (показано на примере ЕРС2) и более гибким (см. предложенные выше фишки) и открытым (free, Open Source) инструментам моделирования. Ориентация на человека, а не машину - ключевой вектор развития. Нотации и инструменты должны быть более "человечными", схемы процессов должны создавать не "специально обученные люди", а сами участники процесса, возможно, даже не подозревая об этом и непосредственно не рисуя процессы. В 2000-ном году мной использовались ровно такие же подходы и ровно те же инструменты моделирования (основные: ARIS toolset, MS visio), что и сейчас, но тогда была настолько интенсивная "движуха в мире ВРМ", что казалось "вот-вот и прогресс всё поменяет", но это оказалось иллюзией. "Старику ARIS" (в части классического моделирования процессов) на пенсию бы (не смотря на добавленные круглую цифру 10 и магическое слово "cloud"), но похоже перемены придут еще совсем не скоро и светлое будущее «обычного» BPM откладывается … Редакционное уточнение. В предыдущих статьях не скупился на внешние ссылки. После этого статья обычно блокировалась хабро-модераторами и потом я упорно им доказывал, что приведенные ссылки не рекламного характера (в основном ссылки то – антирекламные были), но при этом всё равно часть ссылок приходилось удалять (видимо принцип: "не вашим - не нашим"). Поэтому, "спокойнее" - с минимум ссылок, а "ищущий" сам загуглит по ключевым словам. Теги: bpm bpms case aris visio epc vba raci-матрица workflow Добавить метки Хабы: Анализ и проектирование систем Визуализация данных Visual Basic for Applications Подготовка технической документации Укажите причину минуса, чтобы автор поработал над ошибками Отправить анонимно Пометьте публикацию своими метками Метки лучше разделять запятой. Например: программирование, алгоритмы Сохранить Реклама Ой, у вас баннер убежал! Ну. И что? Читают сейчас Почему у авокадо большая косточка 29,6k 66 История одного собеседования 16,8k 27 Яндекс готовится купить банк 5,4k 28 История одной коробки передач 9,1k 43 Разработчик 7-Zip выпустил официальный билд для Linux спустя 22 года после выхода Windows-версии 16,5k 147 Судьба предателя, угнавшего новейший МиГ-25 в Японию 927k 2738 Краткий курс хабраавторства, или Все шишки на одной ёлке Мегапост Редакторский дайджест Присылаем лучшие статьи раз в месяц Скоро на этот адрес придет письмо. Подтвердите подписку, если всё в силе. 0 5 1,4k 4 Поделиться Скопировать ссылку Facebook Twitter ВКонтакте Telegram Pocket Нарушение Опишите суть нарушения Отправить 7,0 Карма 0,0 Рейтинг bipiem Пользователь Платежная система Похожие публикации 28 апреля 2018 в 14:23 Разбираемся с понятием BPM. Что такое управление бизнес процессами 15 57,7k 122 7 15 июля 2016 в 10:57 Бизнес-процессы: Как все запущено и запутано. Глава Третья. Общая классификация BPM и философия BPMS 5 22,2k 80 8 11 июня 2012 в 10:59 Эффективное распределение ролей посредством RACI матрицы (Обновлено) 21 105k 163 10 Вакансии Технический писатель от 40 000 AgentApp Санкт-Петербург Можно удаленно Системный IT аналитик до 150 000 СКИФ ЭПП Москва Можно удаленно Системный архитектор до 350 000 HR Stars Санкт-Петербург Можно удаленно Системный аналитик до 250 000 Цифровые привычки Москва Можно удаленно Аналитик по проведению исследований СКЗИ и систем защиты информации от 120 000 до 200 000 КриптоПро Москва Больше вакансий на Хабр Карьере Реклама AdBlock похитил этот баннер, но баннеры не зубы — отрастут Подробнее Минуточку внимания Комментарии 4 artem534 вчера в 22:20 0 «Старику ARIS» (в части классического моделирования процессов) на пенсию бы (не смотря на добавленные круглую цифру 10 и магическое слово «cloud»), но похоже перемены придут еще совсем не скоро и светлое будущее «обычного» BPM откладывается … А есть ли вообще будущее у BPM (у методологии, самой по себе, без исполнимых процессов (без «S»))? Просто это же немного разные подходы — в первом случае аналитики рисуют диаграммы и консультируют топов по узким местам в процессах (и поэтому BPM может не работать, т.к. рекомендации могут так и остаться «в столе»). А в случае исполнимых процессов — необходимо перенести процессы в систему так, чтобы BPMS в организация таки заработала (если она не заработает — это будет явно видно — либо процессы будут исполняться в обход системы (и это будет видно в системе, в виду отсутствия движения по процессу), либо система будет тормозить деятельность организации). Я это к тому, что ARIS, BPWin, Business Studio, Visio — это же инструменты моделирования процессов (без намека на исполнение), а основная движуха в BPM (имхо) как раз в S — BPMS — в том, что можно заставить процессы исполняться (и поэтому инструменты недотягивают). Из Open-Source BPMS не так плохи Camunda (https://habr.com/ru/company/tinkoff/blog/455860/, bpmn.io), RunaWFE (https://habr.com/ru/post/308200/, runawfe.ru/BPMS_RunaWFE_Free) bipiem сегодня в 00:10 0 1. BPM, BPMS – который для формализации процессов и всякое «исполняемое», что BPMS, low code и все подобное, включая «программирование без программирования» – это параллельные вселенные (еще на многие годы). Они хоть и пересекаются, но очень мало и, как правило, «по недоразумению». 2 BPM, BPMS – который для формализации процессов (базовая часть Process Engineering), это не только «аналитики рисуют диаграммы и консультируют топов по узким местам в процессах». Это вообще куда более глубокий пласт, нежели «всего лишь» автоматизация. Если уж «про топов», то это и взгляд с высоты птичьего полета на процессы: процессы в «крупную клетку» и там не «про узкие места» в процессе, а про целостность и концептуальность. Ключевая задача – это формализация как текущих, так и планируемых процессов. Причем как на эскизном (нечетком, предварительном, общая концепция), так и детальном (рабочая документация) уровне. Это та же инженерия процесса, подобная ЕСКД, начиная от схемы деления на составные части чего-то большого (мега процесса) и кончая электрической принципиальной схемой, т.е. до самого маленького резистора (в нашем случае, до крохотного процесса). Здесь и текущие регламенты компании и проектная деятельность. Можно много продолжать. Причем «процесс» – это только «общее название», т.к. область понятий понимается намного шире, включая всё окружение процесса, документооборот, включая бумажный, ресурсы HR и не HR (демоны, роботы и т.п.), алгоритмы, бизнес-правила. Это если брать процессо-центричный подход (т.е. во главе всего – Процесс). 3 Camunda и «компания» — очень хорошие продукты, но они пока не заменят, указанное в пункте 2. К тому, же если бы они были такими идеальными, как многие их представляют, то они бы давно вытеснили классические системы разработки ПО. Но пока в части Software Engineering господствуют другие платформы, а в части Process Engineering – их флагман = BPMN2 не может обеспечить даже понимаемого неАйтишнику описания процесса. В прошлых статьях я останавливался на этом моменте. SergeyUstinov сегодня в 00:20 0 Давайте будем честными. Все эти рассуждения про формализацию — это просто красивое название для распила бюджета. Я не слышал ни про один пример, когда сложное описание (без автоматизации) было настолько близко к реальности, чтобы с ним можно было делать хоть что то реально полезное. Поэтому никому это по большому счету и не интересно. Освоить бюджет можно и с Visio. А когда нужны реальные результаты — работают с BPMS / BPMN. thatsme сегодня в 09:39 0 Всё ниже написанное относится к конкретной стране и городу в котором я работаю. Уже лет 7 у меня не проходит удивление от того, что такой замечательный инструмент как BPMN, превращают в плохой миф. Некомпетентные архитекторы и менеджеры делают всё, чтобы BPMN был практически не применим к использованию. Я очень сильно удивляюсь тому: 1 что медеджеры BPMN не знают, и воспринимают его как сктеч, который «примерно так» демонстрирует процесс, который потом будет расписан в бумажках и регламентах и никогда на самом деле работать не будет; 2 никто вообще, кроме тех кто пользуется купленым у IBM движком (банки), не понимают, что диаграмма в BPMN это сразу автоматизированный процесс; 3 банки не воспринимают BPMN как инструмент управления процессами на предприятии и инструмент автоматизации процессов, а воспринимают только как инструмент разработки 4 никто не знает о нормальных инструментах как презентации так и исполнения BPMN (кроме случаев с банками), которые по факту ничего о BPMN не знают 5 никто не знает о существующих open source инструментах работы и исполнения BPMN, и когда им об этих инструментах рассказываешь — им пофигу (пилить нечего) Особые претензии у меня к Террасофт с их BPM online, который они массово продают во все возможные организации, и этот инструмент к BPMN вообще никакого отношения не имеет, однако все кто купил BPM online и продукты на нём построенные, свято уверены, что у них есть BPMN, и это сложно и дорого. Для тех кому интересно, обратите внимание на TWE: Together Workflow Engine (Enhydra Shark) и Together Workflow Editor. Готовый продукт использующий TWE: CMDBuild Разработка под CMDBuild — создать роли для процесса, создать новый процесс (пустой), экспортировать шаблон и открыть его в редакторе TWE, в lanes разложить роли, создать сам процесс со всеми скриптами (рисуем сову), сохранить файл, импортировать процесс в CMDBuild. Всё. Можно использовать. Далее идут отладка тестирование и коррекция этого процесса, а потм можно запускать в продакшн. Для сложнго бизнес поцесса с кучей участников, от момента совместного создания процесса, до запуска в эксплуатацию — максимум 2 недели. И вот это -2 недели, это плохо, т.к НА ЭТОМ НИЧЕГО НЕ ЗАРАБОТАШЬ. Каждый мэнеджер понимает, что он не сможет отжать нормальных денег на этой фигне. Примечания: 1. Visio — рисовалка, а не инструмент для BPMN. 2. Любая рисловалка, результат рисования которой не возможно выполнить в BPMN движке, — это не инструмент для работы с BPMN. Даже если бизнесу нужен BPMN, который упростит цикл Дёминга и вообще позволит процессы автоматизировать, никогда не получит нужного результата. Т.к. все участники цепочки, — пиявки. Им либо всё равно, либо хочется поживиться, либо они вообще изменений не хотят, либо хотят иметь мутные процессы, что-бы и ответственность размазать и аудит надуть и поживиться в мутной водице, либо просто представления о BPMN не имеют. Накипело… Только полноправные пользователи могут оставлять комментарии. Войдите, пожалуйста. Что обсуждают Сейчас Вчера Неделя Коронавирус нерукотворный: разбираем гипотезу о лабораторном происхождении SARS-CoV-2 19,1k 308 Яндекс готовится купить банк 5,4k 28 Биологически правдоподобное обучение ИИ. Краткий обзор достижений 1,4k 3 Как создавать спирографы в Excel 4,1k 15 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Разработчик 7-Zip выпустил официальный билд для Linux спустя 22 года после выхода Windows-версии 16,5k 147 Почему возобновляемые источники энергии так быстро дешевеют и к чему это может привести? 10k 95 Как ощутить «интернет 2000 года» 10,1k 70 Почему у авокадо большая косточка 29,6k 66 Экзамен на знание киберзлоумышленников Мегатест Что делать, если технический прогресс ухудшает жизнь людей? Перестаньте кормить зверя 30,3k 513 Коронавирус нерукотворный: разбираем гипотезу о лабораторном происхождении SARS-CoV-2 19,1k 308 «Группа смерти» изнутри: люди, которые играют в опасные игры 48,8k 295 Не блокировка, а замедление 60,5k 257 Краткий курс хабраавторства, или Все шишки на одной ёлке Мегапост Самое читаемое Сутки Неделя Месяц Почему у авокадо большая косточка +118 29,6k 55 66 Заключённый использовал одиночную камеру для изучения математики. Сегодня он решает самые трудные уравнения в мире +96 43,7k 131 87 Судьба предателя, угнавшего новейший МиГ-25 в Японию +97 927k 132 2738 История одного собеседования +58 16,8k 40 27 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Не блокировка, а замедление +111 60,5k 66 257 Смотрим любое кино мгновенно +65 49,4k 375 236 «Группа смерти» изнутри: люди, которые играют в опасные игры +258 48,8k 212 295 Заключённый использовал одиночную камеру для изучения математики. Сегодня он решает самые трудные уравнения в мире +96 43,7k 131 87 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Судьба предателя, угнавшего новейший МиГ-25 в Японию +97 927k 132 2738 О фейковых криптовалютах (Ethereum, Tron, Ripple и пр) +230 183k 306 500 Как выжить, если вы падаете со скоростью 190 км/ч с высоты 10 000 метров, и у вас в запасе есть три минуты +155 144k 147 313 Почему Microsoft перестала бороться с пиратством своего ПО +81 117k 92 549 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Пользователи Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Реклама Тарифы Контент Семинары Мегапроекты Мерч © 2006 – 2021 «Habr» Настройка языка О сайте Служба поддержки Мобильная версия Настройка языка Интерфейс Русский English Язык публикаций Русский Английский Сохранить настройки