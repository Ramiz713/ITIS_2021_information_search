Все сервисы Хабра Сообщество IT-специалистов Ответы на любые вопросы об IT Профессиональное развитие в IT Удаленная работа для IT-специалистов Как стать автором Что ты знаешь о взломщиках? Все потоки Разработка Администрирование Дизайн Менеджмент Маркетинг Научпоп Войти Регистрация WebEagle вчера в 17:42 Простой WebSocket-сервер на Node.JS JavaScript, Node.JS Из песочницы Сейчас мы с вами напишем простой WebSocket-сервер на node.js. При подключении к этому серверу в ответ придёт приветственное сообщение. А так же будет доступна к выполнению пара не сложных команд. Для этого потребуется установить Node.js с менеджером пакетов npm, он идёт в комплекте Настройка проекта В начале, нам потребуется создать директорию будущего проекта mkdir websocket-server-node Переходим в директорию cd websocket-server-node Далее нужно инициализировать новый проект через npm npm init Установщик потребует ответить на несколько вопросов, их можно пропустить После инициализации проекта, необходимо добавить в проект библиотеку WS и настройку для работы с текстом в UTF-8 npm install ws npm install --save-optional utf-8-validate Код websocket-сервера Теперь приступим к написанию кода. В директории проекта создадим новый файл server.js, откроем файл. Далее я последовательно опишу весь код, а вот ссылка на полный код на GitHub. server.js: В начале нужно подключить библиотеку для работы с websocket const WebSocket = require('ws'); Далее, создадим константу, экземпляр класса WebSocket, с указанием порта на котором будет запущен WebSocket-сервер. const wsServer = new WebSocket.Server({port: 9000}); В отличии от HTTP-сервера, WebSocket-сервер принимает подключение и удерживает его. HTTP-сервер принимает запросы напрямую, а WebSocket-сервер принимает запросы от подключения, такое соединение является полнодуплексное. Напишем обработчик подключения, в качестве обработчика укажем функцию onConnect. wsServer.on('connection', onConnect); В момент подключения нового клиента в onConnection передаётся объекта ws-соединения, через него сервер будет общаться с каждым конкретным клиентом. Функция onConnect принимает только один параметр, назовём его wsClient. В нашем конкретном примере мы подключим только два обработчика событий на объект wsClient: message и close. message - обрабатывает событие входящего сообщения от клиента. close - событие разрыва соединения с клиентом. В самом начале функции onConnect, выведем в консоль сообщение что новый пользователь в сети. И отправим клиенту приветственное сообщение Далее опишу заготовку для функции onConnect: function onConnect(wsClient) {
  console.log('Новый пользователь');
  // отправка приветственного сообщения клиенту
  wsClient.send('Привет');
wsClient.on('message', function(message) {
    /* обработчик сообщений от клиента */
  }
wsClient.on('close', function() {
    // отправка уведомления в консоль
    console.log('Пользователь отключился');
  }
} На событие close сервер выведет в консоль уведомление. Теперь напишем обработчик сообщений со стороны клиента. Договоримся, что команды сервер будет принимать в JSON-формате. JSON позволит отдельно указывать команду и параметры, а ответ сервера будет возвращаться в текстовом формате. Формат JSON команд от клиента: {
  action: 'ECHO' | 'PING',
  data?: string // необязательный параметр
} Как видно из формата, сервер будет принимать две команды: echo-запрос, в ответ на который сервер отправит содержимое data ping, в ответ сервер отправит pong если команда не известна, сервер выведет в консоль уведомление "Неизвестная команда" Содержимое обработчика сообщений от клиента: try {
  // сообщение пришло текстом, нужно конвертировать в JSON-формат
  const jsonMessage = JSON.parse(message);
  switch (jsonMessage) {
    case 'ECHO':
      wsClient.send(jsonMessage.data);
      break;
    case: 'PING':
      setTimeout(function() {
        wsClient.send('PONG');
      }, 2000);
      break;
    default:
      console.log('Неизвестная команда');
      break;
  }
} catch (error) {
  console.log('Ошибка', error);
} Как вы уже видите, на команду PING сервер не сразу ответит, а подождёт 2 секунды. Добавим в конце файла server.js строку, которая выведет в консоль информацию, на каком порту запущен сервер. console.log('Сервер запущен на 9000 порту'); Запуск сервера Для запуска сервера необходимо перейти в консоль и ввести команду: node server.js Сервер доступен локально по адресу ws://localhost:9000. Остановить сервер можно сочетанием клавиш: Для Windows и Linux (Ctrl + C) Для MacOs (Cmd + C) Если хотите проверить работу сервера с другого устройства в рамках локальной сети, то откройте ещё одно окно консоли и запустите команду для Window: ipconfig для Linux и MacOS: ifconfig В моём случае локальный адрес 192.168.0.15, значит из локальной сети сервер будет доступен по адресу ws://192.168.0.15:9000. Проверка работы сервера Чтобы протестировать работу сервера, откроем любую страницу в браузере и нажмём клавишу F12. Откроется DevTools, перейдём в консоль браузера и скопируем следующий код: const myWs = new WebSocket('ws://localhost:9000');
// обработчик проинформирует в консоль когда соединение установится
myWs.onopen = function () {
  console.log('подключился');
};
// обработчик сообщений от сервера
myWs.onmessage = function (message) {
  console.log('Message: %s', message.data);
};
// функция для отправки echo-сообщений на сервер
function wsSendEcho(value) {
  myWs.send(JSON.stringify({action: 'ECHO', data: value.toString()}));
}
// функция для отправки команды ping на сервер
function wsSendPing() {
  myWs.send(JSON.stringify({action: 'PING'}));
} Запустите этот код. Далее в консоли браузера вызовите функцию wsSendPing: wsSendPing() Через 2 секунды сервер пришлёт ответ, и в консоли выведется: Message: PONG Вызовите функцию wsSendEcho, к примеру, с содержимым "Test!", и в консоли будет выведено: Message: Test! Вот и всё! Кому понравилось, ставьте Like, подписывайтесь. Всем Добра! Ссылка на полный код GitHub Теги: websocket node javascript websocket server Добавить метки Хабы: JavaScript Node.JS Укажите причину минуса, чтобы автор поработал над ошибками Отправить анонимно Пометьте публикацию своими метками Метки лучше разделять запятой. Например: программирование, алгоритмы Сохранить Реклама Ой, у вас баннер убежал! Ну. И что? Читают сейчас Почему у авокадо большая косточка 29,6k 66 История одного собеседования 16,9k 27 Яндекс готовится купить банк 5,4k 28 История одной коробки передач 9,1k 43 Разработчик 7-Zip выпустил официальный билд для Linux спустя 22 года после выхода Windows-версии 16,5k 147 Судьба предателя, угнавшего новейший МиГ-25 в Японию 927k 2738 Экзамен на знание киберзлоумышленников Мегатест Редакторский дайджест Присылаем лучшие статьи раз в месяц Скоро на этот адрес придет письмо. Подтвердите подписку, если всё в силе. –6 13 1,7k 1 Поделиться Скопировать ссылку Facebook Twitter ВКонтакте Telegram Pocket Нарушение Опишите суть нарушения Отправить 3,0 Карма –6,0 Рейтинг WebEagle Пользователь Платежная система Похожие публикации 21 мая 2019 в 08:41 Phoenix LiveView: когда javascript код доставляет удовольствие* 3 2,9k 16 4 23 января 2018 в 11:57 Приложения реального времени на TypeScript: разработка чата с применением WebSocket, Node и Angular 13 21,9k 160 3 24 мая 2012 в 12:33 Динамическое отображение логов в броузере на Node.js & WebSocket 6 3,5k 47 7 Курсы JavaScript Developer. Professional 29 марта 2021 5 месяцев 72 500 OTUS Node.js: серверный JavaScript 5 апреля 2021 6 недель 27 000 Loftschool Комплексное обучение JavaScript 19 апреля 2021 7 недель 27 000 Loftschool JavaScript. Уровень 2. Расширенные возможности 20 марта 2021 13 990 Специалист.ру JavaScript, уровень 1. Основы веб-программирования 22 марта 2021 2 недели 10 990 Специалист.ру Больше курсов на Хабр Карьере Реклама AdBlock похитил этот баннер, но баннеры не зубы — отрастут Подробнее Минуточку внимания Комментарии 1 dimuska139 вчера в 18:22 +2 Чем эта статья отличается от вот этой? Только полноправные пользователи могут оставлять комментарии. Войдите, пожалуйста. Что обсуждают Сейчас Вчера Неделя Коронавирус нерукотворный: разбираем гипотезу о лабораторном происхождении SARS-CoV-2 19,1k 308 Яндекс готовится купить банк 5,4k 28 Биологически правдоподобное обучение ИИ. Краткий обзор достижений 1,4k 3 Как создавать спирографы в Excel 4,1k 15 Краткий курс хабраавторства, или Все шишки на одной ёлке Мегапост Разработчик 7-Zip выпустил официальный билд для Linux спустя 22 года после выхода Windows-версии 16,5k 147 Почему возобновляемые источники энергии так быстро дешевеют и к чему это может привести? 10,1k 95 Как ощутить «интернет 2000 года» 10,1k 70 Почему у авокадо большая косточка 29,6k 66 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Что делать, если технический прогресс ухудшает жизнь людей? Перестаньте кормить зверя 30,3k 513 Коронавирус нерукотворный: разбираем гипотезу о лабораторном происхождении SARS-CoV-2 19,1k 308 «Группа смерти» изнутри: люди, которые играют в опасные игры 48,8k 295 Не блокировка, а замедление 60,5k 257 Краткий курс хабраавторства, или Все шишки на одной ёлке Мегапост Самое читаемое Сутки Неделя Месяц Почему у авокадо большая косточка +118 29,6k 55 66 Заключённый использовал одиночную камеру для изучения математики. Сегодня он решает самые трудные уравнения в мире +96 43,7k 131 87 Судьба предателя, угнавшего новейший МиГ-25 в Японию +97 927k 132 2738 История одного собеседования +58 16,9k 40 27 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Не блокировка, а замедление +111 60,5k 66 257 Смотрим любое кино мгновенно +65 49,4k 375 236 «Группа смерти» изнутри: люди, которые играют в опасные игры +258 48,8k 212 295 Заключённый использовал одиночную камеру для изучения математики. Сегодня он решает самые трудные уравнения в мире +96 43,7k 131 87 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Судьба предателя, угнавшего новейший МиГ-25 в Японию +97 927k 132 2738 О фейковых криптовалютах (Ethereum, Tron, Ripple и пр) +230 183k 306 500 Как выжить, если вы падаете со скоростью 190 км/ч с высоты 10 000 метров, и у вас в запасе есть три минуты +155 144k 147 313 Почему Microsoft перестала бороться с пиратством своего ПО +81 117k 92 549 Куда же плывут облака? Подбиваем итоги опроса и даём аналитику Мегапост Ваш аккаунт Войти Регистрация Разделы Публикации Новости Хабы Компании Пользователи Песочница Информация Устройство сайта Для авторов Для компаний Документы Соглашение Конфиденциальность Услуги Реклама Тарифы Контент Семинары Мегапроекты Мерч © 2006 – 2021 «Habr» Настройка языка О сайте Служба поддержки Мобильная версия Настройка языка Интерфейс Русский English Язык публикаций Русский Английский Сохранить настройки